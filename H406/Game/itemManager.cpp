//==============================================================================
//
// itemManager[itemManager.cpp]
// Author : masato masuda : 2015/11/18
//
//==============================================================================

//******************************************************************************
// include
//******************************************************************************
#include "itemManager.h"
#include "iItem.h"
#include "itemBomb.h"
#include "player.h"

//==============================================================================
// init
//------------------------------------------------------------------------------
bool ItemManager::init(){
  memset(_playerList, 0, sizeof(_playerList));
  return true;
}

//==============================================================================
// update
//------------------------------------------------------------------------------
void ItemManager::update(){
}

//==============================================================================
// uninit
//------------------------------------------------------------------------------
void ItemManager::uninit(){
}

//==============================================================================
// createBomb
//------------------------------------------------------------------------------
void ItemManager::createBomb(int ownerId, int targetId, int dripNum){
  auto bomb = ItemBomb::create();
  this->addChild(bomb);
  _itemList.push_back(bomb);

  bomb->setUse(true);
  bomb->setPos(_playerList[ownerId]->getPos());
  bomb->setTarget(_playerList[targetId]);
}

//==============================================================================
// addPlayer
//------------------------------------------------------------------------------
void ItemManager::addPlayer(Player* player) {
  for (Player*& _player : _playerList) {
    if (_player == nullptr) {
      _player = player;
      break;
    }
  }
}

//EOF
