//==============================================================================
//
// shadow[shadow.cpp]
// Author : masato masuda : 2015/12/15
//
//==============================================================================

//******************************************************************************
// include
//******************************************************************************
#include "shadow.h"
#include "dataManager.h"

namespace{
  const Vec2 kShadowSize(50.f, 50.f);
}

//==============================================================================
// init
//------------------------------------------------------------------------------
bool Shadow::init(void)
{
  _sprite = Sprite3DSubtractive::create("./data/texture/shadow.jpg");
  _sprite->setSize(kShadowSize.x, kShadowSize.y) ;
  _sprite->setRotX(D3DX_PI * 0.5f);
  this->addChild(_sprite);

  _owner = nullptr;

  return true;
}

//==============================================================================
// update
//------------------------------------------------------------------------------
void Shadow::update(void)
{
  if (_owner == nullptr) return;

  Vec3 pos = _owner->getPos();
  pos.y = 2.f;
  _pos = pos;
}

//==============================================================================
// uninit
//------------------------------------------------------------------------------
void Shadow::uninit(void)
{
}


//EOF
