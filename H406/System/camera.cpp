//==============================================================================
//
// camera[camera.cpp]
// Author : Yasuaki Yamashita : 2015/10/01
//
//==============================================================================

//******************************************************************************
// include
//******************************************************************************
#include "camera.h"

//==============================================================================
// 
//------------------------------------------------------------------------------
void Camera::CameraEx::update() {
  // ビューマトリックス
  D3DXMatrixIdentity(&_mtxView); // ビューマトリックスの初期化
  D3DXMatrixLookAtLH(&_mtxView,&_posCameraP,&_posCameraR,&_vecCameraU);

  _update = false;
}

//==============================================================================
//
//------------------------------------------------------------------------------
Camera::Camera() {
  _cameraList.clear();
}

//==============================================================================
//
//------------------------------------------------------------------------------
Camera::~Camera() {
  for(auto& cam : _cameraList) {
    SafeDelete(cam);
  }
  _cameraList.clear();
}

//==============================================================================
// createCamera
//------------------------------------------------------------------------------
CameraBace* Camera::createCamera() {
  auto cam = new CameraEx();
  _cameraList.push_back(cam);
  return cam;
}

//==============================================================================
//
//------------------------------------------------------------------------------
void Camera::releaseCamera(CameraBace* camera) {
  auto it = remove_if(_cameraList.begin(),_cameraList.end(),[camera](CameraEx* cam) {return camera == cam;});
  _cameraList.erase(it);
  SafeDelete(camera);
}

//==============================================================================
//
//------------------------------------------------------------------------------
void Camera::update() {
  for(auto& cam : _cameraList) {
    if(cam->isUpdate())
      cam->update();
  }
}

//EOF